import pandas as pd
import os
import matplotlib.pyplot as plt

working = "/home/scp4151/Desktop/PASCALDATAANALYSIS/"

fnames = ["mutantfinalcur.csv", "wtfinalcur.csv"]

cols = ["ms1","ms2","len1","len2"]

basegene = "GTAAATGCCGGTGACAACACACTGGGGCATGGGATCCAGAGTTAACCCCTCCAGGTCACAGCCAGGTTATATCTCCACAATGAAGGGGGGAGGTGGGCCATACTTTCT" \
           "CGCCCTAATGAAGGTAGCTCAAAAACCCCTAGGCCAGGTTGTAATCCTAGCCTTATATAAAAGGAATTCTGTGCCCTCACTCCCCTGGATCCCTGGGCAAAGCCCCAG" \
           "AGGGAAACACAAACAGGTTGTTGTAACACACCTTGCTGGGTACCACCATGGAGGACAGTTGGCTTATGGGGGTGGGGGGTGCCTGGGGCCACGGAGTGACTGGTGATG" \
           "GCTATCCCTCCTTGGAACCCCTCCAGCCTCCTCTTAGCTTCAGATTTGTTTATTTGTTTTTTACTAAGACCTGCTCTTTCAGGTCTGTTGGCTCTTTTAGGGGCTGAA" \
           "GAAGGCCGAGTTGAGAAGGGATGCAAGGGAGGGGGCCAGAATGAGCCCTTAGGGCTCAGAGCCTCCATCCTGCCCCAAGATGTCTACAGCTTGTGCTCCTGGGGTGCT" \
           "AGAGGCGCACAAGGAGGAAAGTTAGTGGCTTCCCTTCCATATCCCGTTCATCAGCCTAGAGCATGGAGCCCAGGTGAGGAGGCCTGCCTGGGAGGGGGCCCTGAGCCA" \
           "GGAAATAAACATTTACTAACTGTACAAAGACCTTGTCCCTGCTGCTGGGGAGCCTGCCAAGTGGTGGAGACAGGACTAGTGCACGAATGATGGAAAGGGAGGGTTGGG" \
           "GTGGGTGGGAGCCAGCCCTTTTCCTCATAAGGGCCTTAGGACACCATACCGATGGAACTGGGGGTACTGGGGAGGTAACCTAGCACCTCCACCAAACCACAGCAACAT" \
           "GTGCTGAGGATGGGGCTGACTAGGTAAGCTCCCTGGAGCGTTTTGGTTAAATTGAGGGAAATTGCTGCATTCCCATTCTCAGTCCATGCCTCCACAGAGGCTATGCCA" \
           "GCTGTAGGCCAGACCCTGGCAAGATCTGGGTGGATAATCAGACTGACTGGTCCCACTCTTCCCACAGGCCTCAGAGCCCCAACTTTGTTCCCTGGGGCAGCCTGGAAA" \
           "TAGCCAGGTCAGAAACCAGCTAGGAATTTTTCCAAGCTGCTTCCTATATGCAAGAATGGGATGGGGCCTTTGGGAGCACTTAGGGAAGATGTGGAGAGTTGGAGGAAA" \
           "AGGGGGCTTGGAGGTAAGGGAGGGGACTGGGGGAAGGATAGGGGAGAAGCTGTGAGCCTGGAGAAGTAGCCAAGGGATCCTGAGGGAATGGGGGAGCTGAGACGAAAC" \
           "CCCCATTTCTATTCAGAAGATGAGCTATGAGTCTGGGCTTGGGCTGATAGAAGCCTTGGCCCCTGGCCTGGTGGGAGCTCTGGGCAGCTGGCCTACAGACGTTCCTTA" \
           "GTGCTGGCGGGTAGGTTTGAATCATCACGCAGGCCCTGGCCTCCACCCGCCCCCACCAGCCCCCTGGCCTCAGTTCCCTGGCAACATCTGGGGTTGGGGGGGCAGCAG" \
           "GAACAAGGGCCTCTGTCTGCCCAGCTGCCTCCCCCTTTGGGTTTTGCCAGACTCCACAGTGCATACGTGGGCTCCAACAGGTCCTCTTCCCTCCCAGTCACTGACTAA" \
           "CCCCGGAACCACACAGCTTCCCGTTCTCAGCTCCACAAACTTGGTGCCAAATTCTTCTCCCCTGGGAAGCATCCCTGGACACTTCCCAAAGGACCCCAGTCACTCCAG" \
           "CCTGTTGGCTGCCGCTCACTTTGATGTCTGCAGGCCAGATGAGGGCTCCAGATGGCACATTGTCAGAGGGACACACTGTGGCCCCTGTGCCCAGCCCTGGGCTCTCTG" \
           "TACATGAAGCAACTCCAGTCCCAAATATGTAGCTGTTTGGGAGGTCAGAAATAGGGGGTCCAGGAGCAAACTCCCCCCACCCCCTTTCCAAAGCCCATTCCCTCTTTA" \
           "GCCAGAGCCGGGGTGTGCAGACGGCAGTCACTAGGGGGCGCTCGGCCACCACAGGGAAGCTGGGTGAATGGAGCGAGCAGCGTCTTCGAGAGTGAGGACGTGTGTGTC" \
           "TGTGTGGGTGAGTGAGTGTGTGCGTGTGGGGTTGAGGGCGTTGGAGCGGGGAGAAGGCCAGGGGTCACTCCAGGATTCCAATAGATCTGTGTGTCCCTCTCCCCACCC" \
           "GTCCCTGTCCGGCTCTCCGCCTTCCCCTGCCCCCTTCAATATTCCTAGCAAAGAGGGAACGGCTCTCAGGCCCTGTCCGCACGTAACCTCACTTTCCTGCTCCCTCCT" \
           "CGCCAATGCCCCGCGGGCGCGTGTCTCTGGACAGAGTTTCCGGGGGCGGATGGGTAATTTTCAGGCTGTGAACCTTGGTGGGGGTCGAGCTTCCCCTTCATTGCGGCG" \
           "GGCTGCGGGCCAGGCTTCACTGAGCGTCCGCAGAGCCCGGGCCCGAGCCGCGTGTGGAAGGGCTGAGGCTCGCCTGTCCCCGCCCCCCGGGGCGGGCCGGGGGCGGGG" \
           "TCCCGGCGGGGCGGAGCCATGCGCCCCCCCCTTTTTTTTTTAAAAGTCGGCTGGTAGCGGGGAGGATCGCGGAGGCTTGGGGCAGCCGGGTAGCTCGGAGGTCGTGGC" \
           "GCTGGGGGCTAGCACCAGCGCTCTGTCGGGAGGCGCAGCGGTTAGGTGGACCGGTCAGCGGACTCACCGGCCAGGGCGCTCGGTGCTGGAATTTGATATTCATTGATC" \
           "CGGGTTTTATCCCTCTTCTTTTTTCTTAAACATTTTTTTTTAAAACTGTATTGTTTCTCGTTTTAATTTATTTTTGCTTGCCATTCCCCACTTGAATCGGGCCGACGG" \
           "CTTGGGGAGATTGCTCTACTTCCCCAAATCACTGTGGATTTTGGAAACCAGCAGAAAGAGGAAAGAGGTAGCAAGAGCTCCAGAGAGAAGTCGAGGAAGAGAGAGACG" \
           "GGGTCAGAGAGAGCGCGCGGGCGTGCGAGCAGCGAAAGCGACAGGGGCAAAGTGAGTGACCTGCTTTTGGGGGTGACCGCCGGAGCGCGGCGTGAGCCCTCCCCCTTG" \
           "GGATCCCGCAGCTGACCAGTCGCGCTGACGGACAGACAGACAGACACCGCCCCCAGCCCCAGCTACCACCTCCTCCCCGGCCGGCGGCGGACAGTGGACGCGGCGGCG" \
           "AGCCGCGGGCAGGGGCCGGAGCCCGCGCCCGGAGGCGGGGTGGAGGGGGTCGGGGCTCGCGGCGTCGCACTGAAACTTTTCGTCCAACTTCTGGGCTGTTCTCGCTTC" \
           "GGAGGAGCCGTGGTCCGCGCGGGGGAAGCCGAGCCGAGCGGAGCCGCGAGAAGTGCTAGCTCGGGCCGGGAGGAGCCGCAGCCGGAGGAGGGGGAGGAGGAAGAAGAG" \
           "AAGGAAGAGGAGAGGGGGCCGCAGTGGCGACTCGGCGCTCGGAAGCCGGGCTCATGGACGGGTGAGGCGGCGGTGTGCGCAGACAGTGCTCCAGCCGCGCGCGCTCCC" \
           "CAGGCCCTGGCCCGGGCCTCGGGCCGGGGAGGAAGAGTAGCTCGCCGAGGCGCCGAGGAGAGCGGGCCGCCCCACAGCCCGAGCCGGAGAGGGAGCGCGAGCCGCGCC" \
           "GGCCCCGGTCGGGCCTCCGAAACCATGAACTTTCTGCTGTCTTGGGTGCATTGGAGCCTTGCCTTGCTGCTCTACCTCCACCATGCCAAGGTAAGCGGTCGTGCCCTG" \
           "CTGGCGCCGCGGGCCGCTGCGAGCGCCTCTCCCGGCTGGGGACGTGCGTGCGAGCGCGCGCGTGGGGGCTCCGTGCCCCACGCGGGTCCATGGGCACCAGGCGTGCGG" \
           "CGTCCCCCTCTGTCGTCTTAGGTGCAGGGGGAGGGGGCGCGCGCGCTAGGTGGGAGGGTACCCGGAGAGAGGCTCACCGCCCACGCGGGCCCTGCCCACCCACCGGAG" \
           "TCACCGCACGTACGATCTGGGCCGACCAGCCGAGGGCGGGAGCCGGAGGAGGAGGCCGAGGGGGCTGGGCTTGCGTTGCCGCTGCCGGCTGAAGTTTGCTCCCGGCCG" \
           "CTGGTCCCGGACGAACTGGAAGTCTGAGCAGCGGGGGCGGGAGCCAGAGACCAGTGGGCAGGGGGTGCTCGGACCTTGGACCGCGGGAGGGCAGAGAGCGTGGAGGGG" \
           "GCAGGGCGCAGGAGGGAGAGGGGGCTTGCTGTCACTGCCACTCGGTCTCTTCAGCCCTCGCCGCGAGTTTGGGAAAAGTTTTGGGGTGGATT"

for a in range(0, len(fnames)):
    df = pd.read_csv(os.path.join(working, "{}".format(fnames[a])), delimiter=",", usecols=cols)

    ms1 = df["ms1"]
    ms2 = df["ms2"]
    len1 = df["len1"]
    len2 = df["len2"]
    d = {}
    for b in range(0, len(ms1)):
        start1 = ms1[b] - 1
        start2 = ms2[b] - 1

        grey = []
        colour1 = []
        colour2 = []

        for c in range(start1+1, start2+1):
            grey.append(c)

        for c in range(start1, start1 + len1[b]):
            colour1.append(c)

        for c in range(start2, start2 + len2[b]):
            colour2.append(c)

        d["dc1_{}".format(b)] = colour1
        d["dc2_{}".format(b)] = colour2
        d["gr_{}".format(b)] = grey

    for b in range(0, len(ms1)):
        g = d["gr_{}".format(b)]
        c1 = d["dc1_{}".format(b)]
        c2 = d["dc2_{}".format(b)]
        gy = [b] * len(g)
        c1y = [b] * len(c1)
        c2y = [b] * len(c2)

        plt.plot(g, gy, color = '#97CAE8')
        plt.plot(c1, c1y, color = 'black')
        plt.plot(c2, c2y, color = 'black')

    plt.axvline(x=2058, color='red')
    plt.axvline(x=2077, color='red')

    ax = plt.gca()
    ax.set_xlim([0, len(basegene)])
    ax.set_xticks([0, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4000, len(basegene)])
    ax.set_ylim(0, len(ms1))
    plt.xticks(rotation=-45)
    ax.set_yticks([0, 40, 80, 120, 160])
    plt.rcParams["font.family"] = "arial"
    plt.title("{} (total rows: {})".format(fnames[a], len(ms2)))
    plt.xlabel('Base')
    plt.savefig(os.path.join(working, "graph_data_{}.svg".format(fnames[a])))
    plt.close()
    sums = []
    for b in range(0, len(ms1)):
       sums.append(ms2[b]-ms1[b])

    sums = sorted(set(sums))

    print("For file {} the max length deletion was {} and the min length deletion was {}.".format(fnames[a], sums[-1], sums[0]))
